% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_write.R
\name{cas.readRDS}
\alias{cas.readRDS}
\title{Read an RDS File and Upload to a CAS Table}
\usage{
cas.readRDS(
  conn,
  file,
  refhook = NULL,
  casOut = list(name = "", replace = FALSE)
)
}
\arguments{
\item{conn}{An instance of a CAS object that represents
a connection and CAS session.}

\item{file}{An \code{character} string that 
specifies the filename for the RDS file.
This value is passed to \code{readRDS}.}

\item{refhook}{An optional value that is passed to
\code{readRDS}.}

\item{casOut}{An optional \code{character} or list. If
you specify a string, then the string is used as the
in-memory table name. A list can be used to specify
properties for the in-memory table as follows:
\describe{
  \item{\code{name}}{An optional \code{character} that 
    specifies the name for the in-memory table. By 
    default, the name of the data frame is used.}
  \item{\code{caslib}}{An optional \code{character} that
    specifies the caslib. Specify this parameter to
    override the active caslib.}
  \item{\code{label}}{An optional \code{character} that
    specifies a descriptive label for the data.}
  \item{\code{replace}}{An optional \code{logical}. When
    set to TRUE, you can replace an existing in-memory
    table with the same name in the same caslib. The 
    default value is FALSE.}
  \item{\code{promote}}{An optional \code{logical}. When
    set to TRUE, the in-memory table has global scope and
    can be available to other CAS sessions (subject to
    access controls). The default value is FALSE and
    the in-memory table has session scope so that it is
    accessible with the session that uploaded the table
    only. Session-scope tables are ideal for data analysis.
    Global-scope tables are better suited for reporting.}
  \item{\code{replication}}{An optional \code{numeric} that
    specifies the number of redundant copies of in-memory
    blocks. This parameter applies to distributed servers
    only. The default value is 1.}
 }}
}
\value{
\code{\link{CASTable}}
}
\description{
This function is a convenience wrapper for
the \R \code{readRDS} and \code{as.casTable} functions.
After reading the file that is accessible to the \R
client, it is uploaded to an in-memory table in 
CAS (the server).
}
\examples{
\dontrun{
myCasTable <- cas.readRDS(s, file="/path/to/data_out.rds", 
  casOut=list(name="mycastable"))
}
}
\seealso{
Other functions for loading in-memory data: 
\code{\link{cas.read.csv}()},
\code{\link{cas.read.jmp}()},
\code{\link{cas.read.sas7bdat}()},
\code{\link{cas.read.table}()},
\code{\link{cas.read.xlsx}()}
}
\concept{functions for loading in-memory data}
% Copyright SAS Institute
