% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_write.R
\name{cas.read.table}
\alias{cas.read.table}
\title{Read a File and Upload to a CAS Table}
\usage{
cas.read.table(
  conn,
  file,
  header = FALSE,
  sep = "",
  quote = "\\"'",
  dec = ".",
  numerals = c("allow.loss", "warn.loss", "no.loss"),
  row.names,
  col.names,
  as.is = !stringsAsFactors,
  na.strings = "NA",
  colClasses = NA,
  nrows = -1,
  skip = 0,
  check.names = TRUE,
  fill = !blank.lines.skip,
  strip.white = FALSE,
  blank.lines.skip = TRUE,
  comment.char = "#",
  allowEscapes = FALSE,
  flush = FALSE,
  stringsAsFactors = default.stringsAsFactors(),
  fileEncoding = "",
  encoding = "unknown",
  text,
  skipNul = FALSE,
  casOut = list(name = "", replace = FALSE)
)
}
\arguments{
\item{conn}{An instance of a CAS object that represents
a connection and CAS session.}

\item{file}{An \code{character} string that 
specifies the filename. This value is passed to \code{read.table}.}

\item{header}{An optional \code{logical} that specifies
whether the first line of the file contains variable
names.}

\item{sep}{An optional \code{character} that is used to specify
the field delimiter for the file. This value is passed to 
\code{write.table}.}

\item{quote}{An optional \code{character} string that specifies
the characters that enclose character data. The value is 
passed to \code{read.table}.}

\item{dec}{An optional \code{character} that specifies the decimal
separator. This value is passed to \code{read.table}.}

\item{numerals}{An optional \code{character} string that specifies
how to interpret numbers that can lose precision due to the
conversion from text to double precision. This value is passed
to \code{read.table}.}

\item{row.names}{An optional \code{character} vector of row
names. This value is passed to \code{read.table}.}

\item{col.names}{An optional \code{character} vector of names 
for the variables. The default is to use "V" followed by the 
column number. This value is passed to \code{read.table}.}

\item{as.is}{An optional vector of \code{logical}, \code{numeric},
or \code{character} indices that specify the columns that are not
converted to factors. This value is passed to \code{read.table}.}

\item{na.strings}{An optional \code{character} vector that specifies
the characters to interpret as NA. This value is passed to
\code{read.table}.}

\item{colClasses}{An optional \code{character} vector that
specifies the classes for the columns. This value is passed
to \code{read.table}.}

\item{nrows}{An optional \code{numeric} that specifies the maximum
number of rows to read. This value is passed to \code{read.table}.}

\item{skip}{An optional \code{numeric} that specifies the number of
lines to skip in the file before reading data. This value is
passed to \code{read.table}.}

\item{check.names}{An optional \code{logical} that specifies
whether variable names from the file are valid names. This value
is passed to \code{read.table}.}

\item{fill}{An optional \code{logical} value. When set to
TRUE, blank fields are implicitly added for rows that have
unequal length. This value is passed to \code{read.table}.}

\item{strip.white}{An optional \code{logical} that specifies
whether white space characters are stripped from character data
that are not enclosed with quotation marks. This value is 
ignored unless sep is specified. This value is passed to 
\code{read.table}.}

\item{blank.lines.skip}{An optional \code{logical} that specifies
whether blank lines in the file are ignored. This value is
passed to \code{read.table}.}

\item{comment.char}{An optional \code{character} that 
specifies the character to interpret as the beginning of a
comment. This value is passed to \code{read.table}.}

\item{allowEscapes}{An optional \code{logical} that specifies
whether C-style escape characters such as \code{\\n} are
interpreted or are read verbatim. This value is passed to
\code{read.table}.}

\item{flush}{An optional \code{logical} that specifies whether
input that follows the last field to read is flushed. Setting
this argument to TRUE enables adding comments to the end of
data lines. This value is passed to \code{read.table}.}

\item{stringsAsFactors}{An optional \code{logical} that specifies
whether character vectors are converted to factors. This argument
is overridden by as.is and colClasses. This value is passed to
\code{read.table}.}

\item{fileEncoding}{An optional \code{character} string that
specifies the encoding to use for reading the file. This
value is passed to \code{read.table}.}

\item{encoding}{An optional \code{character} string that specifies
the encoding for character data. This value is passed to 
\code{read.table}.}

\item{text}{An optional \code{character} string. This value is
passed to \code{read.table}.}

\item{skipNul}{An optional \code{logical} that is passed to
\code{read.table}.}

\item{casOut}{An optional \code{character} or list. If
you specify a string, then the string is used as the
in-memory table name. A list can be used to specify
properties for the in-memory table as follows:
\describe{
  \item{\code{name}}{An optional \code{character} that 
    specifies the name for the in-memory table. By 
    default, the name of the data frame is used.}
  \item{\code{caslib}}{An optional \code{character} that
    specifies the caslib. Specify this parameter to
    override the active caslib.}
  \item{\code{label}}{An optional \code{character} that
    specifies a descriptive label for the data.}
  \item{\code{replace}}{An optional \code{logical}. When
    set to TRUE, you can replace an existing in-memory
    table with the same name in the same caslib. The 
    default value is FALSE.}
  \item{\code{promote}}{An optional \code{logical}. When
    set to TRUE, the in-memory table has global scope and
    can be available to other CAS sessions (subject to
    access controls). The default value is FALSE and
    the in-memory table has session scope so that it is
    accessible with the session that uploaded the table
    only. Session-scope tables are ideal for data analysis.
    Global-scope tables are better suited for reporting.}
  \item{\code{replication}}{An optional \code{numeric} that
    specifies the number of redundant copies of in-memory
    blocks. This parameter applies to distributed servers
    only. The default value is 1.}
 }}
}
\value{
\code{\link{CASTable}}
}
\description{
This function is a convenience wrapper for
the \R \code{read.table} and \code{as.casTable} functions.
After reading the file that is accessible to the \R
client, it is uploaded to an in-memory table in 
CAS (the server).
}
\examples{
\dontrun{
myCasTable <- cas.read.table(s, "/path/to/data.tsv", header=TRUE,
                             sep="\t", casOut=list(name="mycastable"))
}
}
\seealso{
Other functions for loading in-memory data: 
\code{\link{cas.read.csv}()},
\code{\link{cas.read.jmp}()},
\code{\link{cas.read.sas7bdat}()},
\code{\link{cas.read.xlsx}()},
\code{\link{cas.readRDS}()}
}
\concept{functions for loading in-memory data}
% Copyright SAS Institute
