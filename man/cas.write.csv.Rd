% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_write.R
\name{cas.write.csv}
\alias{cas.write.csv}
\title{Write a CAS Table to a CSV File}
\usage{
cas.write.csv(
  CASTable,
  file = "",
  quote = TRUE,
  eol = "\\n",
  na = "NA",
  row.names = TRUE,
  fileEncoding = ""
)
}
\arguments{
\item{CASTable}{The instance of the CASTable to save as
as a CSV file.}

\item{file}{An \code{character} string that 
specifies the filename for the CSV file. If you do not
specify the file, then the in-memory table name is used
with a .csv suffix. This value is passed to \code{write.csv}.}

\item{quote}{An optional \code{logical} value or numeric
vector. This value is passed to \code{write.csv}.}

\item{eol}{An optional \code{character} string that is used as the
end-of-line character or characters. This value is passed to 
\code{write.csv}.}

\item{na}{An optional \code{character} string to represent
missing values. This value is passed to \code{write.csv}.}

\item{row.names}{An optional \code{logical} value or a 
\code{character} vector of row names. This value is passed to
\code{write.csv}.}

\item{fileEncoding}{An optional \code{character} string that
specifies the encoding to use for writing the CSV file. This
value is passed to \code{write.csv}.}

\item{append}{An optional \code{logical} value This value
is passed to \code{write.csv}.}

\item{sep}{An optional \code{character} that is used to separate
values in the CSV file. This value is passed to \code{write.csv}.}

\item{dec}{An optional \code{character} to represent the decimal
separator. This value is passed to \code{write.csv}.}

\item{col.names}{An optional \code{logical} value or a
\code{character} vector of column names. This value is passed
to \code{write.csv}.}

\item{qmethod}{An optional \code{chracter} string that describes
how to write embedded quotation marks. This value is passed
to \code{write.csv}.}
}
\description{
This function downloads an in-memory table from the
CAS server and saves it as a CSV file that is accesible
to \R (the client). This function is a convenience
wrapper for the \R \code{write.csv} function.
}
\details{
This function saves the file on the \R client. As an
alternative, you can use the \code{cas.table.save}
generated function to save a server-side CSV file.
}
\examples{
\dontrun{
# upload a SAS data set to an in-memory table
gold_medals <- cas.read.sas7bdat(s, "/path/to/gold_medals.sas7bdat")

# download the in-memory table as a CSV file
cas.write.csv(gold_medals, "~/gold_medals.csv")

}
}
\seealso{
Other functions for saving in-memory data: 
\code{\link{cas.saveRDS}()},
\code{\link{cas.write.table}()},
\code{\link{cas.write.xlsx}()}
}
\concept{functions for saving in-memory data}
% Copyright SAS Institute
