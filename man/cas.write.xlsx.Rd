% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_write.R
\name{cas.write.xlsx}
\alias{cas.write.xlsx}
\title{Write a CAS Table to a Microsoft Excel Workbook}
\usage{
cas.write.xlsx(
  CASTable,
  file = "",
  sheetName = "Sheet1",
  col.names = TRUE,
  row.names = TRUE,
  append = FALSE,
  showNA = TRUE
)
}
\arguments{
\item{CASTable}{The instance of the CASTable to save as
as a CSV file.}

\item{file}{An \code{character} string that 
specifies the filename for the XLSX file. If you do not
specify the file, then the in-memory table name is used
with an .xslx suffix. This value is passed to \code{write.xlsx}.}

\item{sheetName}{An optional \code{character} string that 
specifies the sheet name in the workbook. This value is
passed to \code{write.xlsx}.}

\item{col.names}{An optional \code{logical} value that specifies
whether column names are included in the workbook. This value
is passed to \code{write.xlsx}.}

\item{row.names}{An optional \code{logical} value that specifies
whether row names are included in the workbook. This value
is passed to \code{write.xlsx}.}

\item{append}{An optional \code{logical} value. This value
is passed to \code{write.xlsx}.}

\item{showNA}{An optional \code{logical} value. This value
is passed to \code{write.xlsx}.}
}
\description{
This function downloads an in-memory table from the
CAS server and saves it as an XLSX file that is accesible
to \R (the client). This function is a convenience
wrapper for the \R \code{write.xslx} function.
}
\examples{
\dontrun{
cas.write.xlsx(myCasTable, file="/path/to/data_out.xlsx")
}
}
\seealso{
Other functions for saving in-memory data: 
\code{\link{cas.saveRDS}()},
\code{\link{cas.write.csv}()},
\code{\link{cas.write.table}()}
}
\concept{functions for saving in-memory data}
% Copyright SAS Institute
